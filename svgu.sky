# Copyright 2023 Nicolas Paul. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.
"""
SVGU configuration for go.nc0.fr
"""

# VCS
BAZAAR = "bzr"
GIT = "git"
FOSSIL = "fossil"
SUBVERSION = "svn"
MERCURIAL = "hg"

DEFAULT_GIT_REF = "master"
DEFAULT_MERCURIAL_REV = "master"

DEFAULT_GITHUB_INSTANCE = "https://github.com"
DEFAULT_GITLAB_INSTANCE = "https://gitlab.com"
DEFAULT_GIT_SOURCEHUT_INSTANCE = "https://git.sr.ht"
DEFAULT_MERCURIAL_SOURCEHUT_INSTANCE = "https://hg.sr.ht"

NC0_GITHUB = "nc0fr"
NC0_SOURCEHUT = "nc0"
NC0_GITLAB = "nc0"

DOMAIN = "go.nc0.fr"

def github(
        name,
        instance = DEFAULT_GITHUB_INSTANCE,
        user = NC0_GITHUB,
        repo = "",
        ref = DEFAULT_GIT_REF):
    """Register a Go module hosted on GitHub.

    Args:
        name (str): the module name
        instance (str): the GitHub instance to use, defaults to
            "https://github.com".
        user (str): the GitHub user, defaults to "nc0fr".
        repo (str): the GitHub repository (without the ".git" suffix),
            defaults to the module name.
        ref (str): the Git ref to use, defaults to "master".
    """

    if repo == "":
        repo = name

    module(
        name = name,
        vcs = GIT,
        repo = "%s/%s/%s.git" % (instance, user, repo),
        dir = "%s/%s/%s/tree/%s{/dir}" % (instance, user, repo, ref),
        file = "%s/%s/%s/blob/%s{/dir}/{file}#{line}" %
               (instance, user, repo, ref),
    )

def gitlab(
        name,
        instance = DEFAULT_GITLAB_INSTANCE,
        user = NC0_GITLAB,
        repo = "",
        ref = DEFAULT_GIT_REF):
    """Register a Go module hosted on GitLab.

    Args:
        name (str): the module name.
        instance (str): the GitLab instance to use, defaults to
            "https://gitlab.com".
        user (str): the GitLab user, defaults to "nc0".
        repo (str): the GitLab repository (without the ".git" suffix),
            defaults to the module name.
        ref (str): the Git ref to use, defaults to "master".
    """

    if repo == "":
        repo = name

    module(
        name = name,
        vcs = GIT,
        repo = "%s/%s/%s.git" % (instance, user, repo),
        dir = "%s/%s/%s/-/tree/%s{/dir}" % (instance, user, repo, ref),
        file = "%s/%s/%s/-/blob/%s{/dir}/{file}#L{line}" %
               (instance, user, repo, ref),
    )

def git_sourcehut(
        name,
        instance = DEFAULT_GIT_SOURCEHUT_INSTANCE,
        user = NC0_SOURCEHUT,
        repo = "",
        ref = DEFAULT_GIT_REF):
    """Register a Go module hosted of Source Hut's Git hosting.

    Args:
        name (str): the module name.
        instance (str): the Git Source Hut instance to use, defaults
            to "https://git.sr.ht".
        user (str): the Source Hut user without the "~" prefix,
            defaults to "nc0".
        repo (str): the Git Source Hut repository (without the ".git"
            suffix), defaults to the module name.
        ref (str): the Git ref to use, defaults to "master".
    """

    if repo == "":
        repo = name

    module(
        name = name,
        vcs = GIT,
        repo = "%s/~%s/%s.git" % (instance, user, repo),
        dir = "%s/~%s/%s/tree/%s{/dir}" % (instance, user, repo, ref),
        file = "%s/~%s/%s/tree/%s/item{/dir}/{file}#L{line}" %
               (instance, user, repo, ref),
    )

def mercurial_sourcehut(
        name,
        instance = DEFAULT_MERCURIAL_SOURCEHUT_INSTANCE,
        user = NC0_SOURCEHUT,
        repo = "",
        rev = DEFAULT_MERCURIAL_REV):
    """Register a Go module hosted of Source Hut's Mercurial  hosting.

    Args:
        name (str): the module name.
        instance (str): the Mercurial Source Hut instance to use,
            defaults to "https://hg.sr.ht".
        user (str): the Source Hut user without the "~" prefix,
            defaults to "nc0".
        repo (str): the Mercurial Source Hut repository, defaults to
            the module name.
        rev (str): the Mercurial revision to use, defaults to "master".
    """

    if repo == "":
        repo = name

    module(
        name = name,
        vcs = GIT,
        repo = "%s/~%s/%s.git" % (instance, user, repo),
        dir = "%s/~%s/%s/browse{/dir}?rev=%s" %
              (instance, user, repo, rev),
        file = "%s/~%s/%s/browse{/dir}/{file}?rev=%s#L{line}" %
               (instance, user, repo, rev),
    )

# go.nc0.fr registry
index(domain = DOMAIN)

github(name = "foo",  repo = "foo-go")
github(name = "feur_bot")
github(name = "clawflake")
github(name = "crocc")
github(name = "staticgovanityurls")
github(name = "svgu")
github(name = "dotfiles")
