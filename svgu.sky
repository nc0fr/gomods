# Copyright Nicolas Paul (2023)
#
# * n@nc0.fr
#
# This software is a computer program whose purpose is to index and references
# Go modules to the go.nc0.fr domain.
#
# This software is governed by the CeCILL license under French law and
# abiding by the rules of distribution of free software.  You can  use,
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info".
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability.
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or
# data to be ensured and,  more generally, to use and operate it in the
# same conditions as regards security.
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.

"""
SVGU configuration file for go.nc0.fr
Reference: https://svgu.nc0.fr
"""

# VCS
BAZAAR = "bzr"
GIT = "git"
FOSSIL = "fossil"
SUBVERSION = "svn"
MERCURIAL = "hg"

DEFAULT_GIT_REF = "master"
DEFAULT_MERCURIAL_REV = "master"

DEFAULT_GITHUB_INSTANCE = "https://github.com"
DEFAULT_GITLAB_INSTANCE = "https://gitlab.com"
DEFAULT_GIT_SOURCEHUT_INSTANCE = "https://git.sr.ht"
DEFAULT_MERCURIAL_SOURCEHUT_INSTANCE = "https://hg.sr.ht"

NC0_GITHUB = "nc0fr"
NC0_SOURCEHUT = "nc0"
NC0_GITLAB = "nc0"

DOMAIN = "go.nc0.fr"

def github(
        name,
        instance = DEFAULT_GITHUB_INSTANCE,
        user = NC0_GITHUB,
        repo = "",
        ref = DEFAULT_GIT_REF):
    """Register a Go module hosted on GitHub.

    Args:
        name (str): the module name
        instance (str): the GitHub instance to use, defaults to
            "https://github.com".
        user (str): the GitHub user, defaults to "nc0fr".
        repo (str): the GitHub repository (without the ".git" suffix),
            defaults to the module name.
        ref (str): the Git ref to use, defaults to "master".
    """

    if repo == "":
        repo = name

    module(
        name = name,
        vcs = GIT,
        repo = "%s/%s/%s.git" % (instance, user, repo),
        dir = "%s/%s/%s/tree/%s{/dir}" % (instance, user, repo, ref),
        file = "%s/%s/%s/blob/%s{/dir}/{file}#{line}" %
               (instance, user, repo, ref),
    )

def gitlab(
        name,
        instance = DEFAULT_GITLAB_INSTANCE,
        user = NC0_GITLAB,
        repo = "",
        ref = DEFAULT_GIT_REF):
    """Register a Go module hosted on GitLab.

    Args:
        name (str): the module name.
        instance (str): the GitLab instance to use, defaults to
            "https://gitlab.com".
        user (str): the GitLab user, defaults to "nc0".
        repo (str): the GitLab repository (without the ".git" suffix),
            defaults to the module name.
        ref (str): the Git ref to use, defaults to "master".
    """

    if repo == "":
        repo = name

    module(
        name = name,
        vcs = GIT,
        repo = "%s/%s/%s.git" % (instance, user, repo),
        dir = "%s/%s/%s/-/tree/%s{/dir}" % (instance, user, repo, ref),
        file = "%s/%s/%s/-/blob/%s{/dir}/{file}#L{line}" %
               (instance, user, repo, ref),
    )

def git_sourcehut(
        name,
        instance = DEFAULT_GIT_SOURCEHUT_INSTANCE,
        user = NC0_SOURCEHUT,
        repo = "",
        ref = DEFAULT_GIT_REF):
    """Register a Go module hosted of Source Hut's Git hosting.

    Args:
        name (str): the module name.
        instance (str): the Git Source Hut instance to use, defaults
            to "https://git.sr.ht".
        user (str): the Source Hut user without the "~" prefix,
            defaults to "nc0".
        repo (str): the Git Source Hut repository (without the ".git"
            suffix), defaults to the module name.
        ref (str): the Git ref to use, defaults to "master".
    """

    if repo == "":
        repo = name

    module(
        name = name,
        vcs = GIT,
        repo = "%s/~%s/%s.git" % (instance, user, repo),
        dir = "%s/~%s/%s/tree/%s{/dir}" % (instance, user, repo, ref),
        file = "%s/~%s/%s/tree/%s/item{/dir}/{file}#L{line}" %
               (instance, user, repo, ref),
    )

def mercurial_sourcehut(
        name,
        instance = DEFAULT_MERCURIAL_SOURCEHUT_INSTANCE,
        user = NC0_SOURCEHUT,
        repo = "",
        rev = DEFAULT_MERCURIAL_REV):
    """Register a Go module hosted of Source Hut's Mercurial  hosting.

    Args:
        name (str): the module name.
        instance (str): the Mercurial Source Hut instance to use,
            defaults to "https://hg.sr.ht".
        user (str): the Source Hut user without the "~" prefix,
            defaults to "nc0".
        repo (str): the Mercurial Source Hut repository, defaults to
            the module name.
        rev (str): the Mercurial revision to use, defaults to "master".
    """

    if repo == "":
        repo = name

    module(
        name = name,
        vcs = GIT,
        repo = "%s/~%s/%s.git" % (instance, user, repo),
        dir = "%s/~%s/%s/browse{/dir}?rev=%s" %
              (instance, user, repo, rev),
        file = "%s/~%s/%s/browse{/dir}/{file}?rev=%s#L{line}" %
               (instance, user, repo, rev),
    )

# go.nc0.fr registry
index(domain = DOMAIN)

def simple_github_modules():
    # Simple modules are modules whose repository on GitHub is the
    # same as the module name.

    # Note: staticgovanityurls is deprecated in favor of SVGU.
    SIMPLE_GITHUB_MODULES = [
        "feur_bot",
        "clawflake",
        "crocc",
        "staticgovanityurls",
        "svgu",
    ]

    for mod in SIMPLE_GITHUB_MODULES:
        github(mod)

simple_github_modules()
github(name = "foo", repo = "foo-go")
